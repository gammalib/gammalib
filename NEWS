New Features and Important Changes in GammaLib 1.5.0

21 October 2017


1. Introduction
---------------
This document briefly summarizes module by module the most important changes
made since the last release of GammaLib.


2. Public interface modifications
---------------------------------
The following classes have been added:
- GCOMD1Response
- GCOMD2Response
- GCOMInstChars
- GCOMIaq
- GCOMRoi
- GCOMEventAtom
- GCOMEventList
- GCOMTim
- GCOMOad
- GCOMOads
- GCOMDri
- GCOMStatus
- GSkyRegionMap

The following classes have been removed:
- n.a.

The following classes have been renamed:
- n.a.

The following methods have been added:
- GTime(std::string&)
- GTime(std::string&, GTimeReference&)
- GTime::set(std::string&)
- GTime::set(std::string&, GTimeReference&)
- GApplicationPar::time(GTimeReference&)
- GApplicationPar::time(GTime&)
- GModelSpectralNodes(GModelSpectral&, GEnergies&)
- GFitsTableCol::scale(double&, double&)
- GCOMInstDir(GSkyDir&, double&)
- GEbounds::operator==(GEbounds&, GEbounds&)
- GEbounds::operator!=(GEbounds&, GEbounds&)
- GPha::operator+=(GPha&)
- GPha::operator-=(GPha&)
- GPha::operator*=(double&)
- GPha::operator/=(double&)
- GPha::areascal(int&, double&)
- GPha::areascal(int&)
- GPha::backscal(int&, double&)
- GPha::backscal(int&)
- operator+(GPha&, GPha&)
- operator-(GPha&, GPha&)
- operator*(GPha&, double&)
- operator*(double&, double&)
- operator/(GPha&, double&)
- GArf::operator+=(GArf&)
- GArf::operator-=(GArf&)
- GArf::operator*=(double&)
- GArf::operator/=(double&)
- operator+(GArf&, GArf&)
- operator-(GArf&, GArf&)
- operator*(GArf&, double&)
- operator*(double&, double&)
- operator/(GArf&, double&)
- GRmf::operator+=(GRmf&)
- GRmf::operator-=(GRmf&)
- GRmf::operator*=(double&)
- GRmf::operator/=(double&)
- operator+(GRmf&, GRmf&)
- operator-(GRmf&, GRmf&)
- operator*(GRmf&, double&)
- operator*(double&, double&)
- operator/(GRmf&, double&)
- GCTAOnOffObservation(GObservations&)

The following methods have been removed:
- n.a.

The following methods have been renamed:
- n.a.

The arguments for the following methods have been changed:
- GCOMResponse(GCaldb&, std::string&)
- GCOMObservation::response(GCaldb&, std::string&)

The return value of the following methods has been changed:
- n.a.


3. Configuration
-----------------
A code generator script codegen.py has been added to the dev folder to ease
the addition of code extensions to GammaLib.


4. Application module
---------------------
A time parameter with type "t" has was to allow specifying time values in
various formats to time systems to an application. Methods were added to set
and retrieve the time value (#1864).


5. Base module
--------------
None


6. FITS I/O Interface
---------------------
The GFitsTableCol::scale() method has been added to allow setting the
TSCALE and TZERO values before reading the column data. The keywords
that may exist in the FITS file are not affected by the setting (#2191).


7. Linear algebra module
------------------------
None


8. Model module
---------------
A spectral model constructor was added to GModelSpectralNodes to allow
conversion of any spectral model into a spectral node model (#2178).

A bug was corrected in GModelSpatialComposite::copy_members() that led to a
segmentation fault when writing a composite spatial model into an XML file.


9. Numerics module
------------------
None


10. Observation module
----------------------
A time string constructor and set method was added to GTime to allow
setting various time formats from a string. Variants exist to set the time in
the native time reference or in a specific time reference (#1864).

A rounding error was fixed in GTime::utc() so that times such as
"2019-12-31T23:59:60" are now "2020-01-01T00:00:00" as they should be (#2177).

The efficiency of the GGti::contains() method has been improved for subsequent
checking of sorted times. Now a new time search always starts at the last
successful index so that the number of search loops is minimized.

Add equality and inequality operators for the GEbounds class.


11. Optimization module
-----------------------
None


12. Sky module
--------------
The GSkyRegionMap class was added to handle arbitrary sky regions defined using
a FITS file map. All positive pixels will define the region (#1121).


13. Support module
------------------
None


14. XML module
--------------
None


15. VO module
-------------
None


16. Xspec module
----------------
Added arithmetic operators for GPha class to add, subtract, scale and divide
spectra, and methods to set and retrieve the area and background scaling
factors.

Added arithmetic operatirs for GArf class to add, subtract, scale and divide
Auxiliary Response Files. 

Added arithmetic operatirs for GRmf class to add, subtract, scale and divide
Redistribution Matrix Files.


17. Test module
---------------
None


18. Multi-wavelength interface
------------------------------
None


19. Fermi-LAT interface
----------------------
None


20. CTA interface
-----------------
Fix a segmentation fault issue when fetching CTA events from an event list
(#2192).

The GCTAOnOffObservation class now performs a proper response integration over
the On and Off regions and takes into account the energy dispersion using the
Redistribution Matrix File (#2210).

The WSTAT statistics was added to GCTAOnOffObservation for maximum likelihood
fitting (#2209).

A GCTAOnOffObservation(GObservations&) constructer has been added to the
GCTAOnOffObservation class that creates a stacked CTA On/Off observations from
all On/Off observations that are found in the observation container (#2228).


21. COMPTEL interface
---------------------
COMPTEL SDA, SDB and ICT response files were added so that the information to
compute the instrument response for any arbitrary energy band is available
(#2186).

The classes GCOMD1Response and GCOMD2Response were added to handle the energy
response of the D1 and D2 modules, respectively. These classes handle reading
of the SDA and SDB response files (#2186).

The class GCOMInstChar was added to handle the instrument characteristics that
are necessary to perform the response computation. The class handles reading
of the ICT file (#2186).

The class GCOMIaq was added to perform the computation of an IAQ response. This
allows now to generate an own IAQ within GammaLib. Below 10 MeV the resulting
IAQs are very close to simulated ones from UNH, above there are some deviations.
Definitely more cross-checking is needed, but for now the functionality is
there (#2186).

The classes GCOMRoi, GCOMEventAtom and GCOMEventList were added to support
handling of COMPTEL event lists in EVP FITS format. In addition, the class
GCOMTim was added to support reading of TIM FITS files. Furthermore the classes
GCOMOad and GCOMOads were added to handle the COMPTEL Orbit Aspect Data. And
finally the class GCOMDri now handles all COMPTEL data cubes (#2187).

The class GCOMStatus was added to handle a mission wide database of D1 and D2
module status that forms now part of the COMPTEL calibration database (#2187).

The COMPTEL Phibar fitting background model now writes out a format that can be
used again (#2184).
