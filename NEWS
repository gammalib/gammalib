New Features and Important Changes in GammaLib 1.1.0

Author(s) : Juergen Knoedlseder

18 January 2016


1. Introduction
---------------
This document briefly summarizes module by module the most important changes
made since the last release of GammaLib.


2. Public interface modifications
---------------------------------
The following methods return now GFilename instead of std::string:
- GFits::filename()


3. Configuration
-----------------
None


4. Application module
---------------------
None


5. Base module
--------------
None


6. FITS I/O Interface
---------------------
GFits now uses the GFilename class to store the FITS filename (fixes #1649).


7. Linear algebra module
------------------------
None


8. Model module
---------------
None


9. Numerics module
------------------
None


10. Observation module
----------------------
None


11. Optimization module
-----------------------
None


12. Sky module
--------------
None


13. Support module
------------------
None


14. XML module
--------------
None


15. VO module
-------------
None


16. Xspec module
----------------
None


17. Test module
---------------
None


18. Multi-wavelength interface
------------------------------
None


19. Fermi-LAT interface
----------------------
None


20. CTA interface
-----------------
The extension name for the GTI HDU is now determined from the data sub-space
keyword provided in the events FITS file header. This allows to have multiple
GTIs (and also event lists) in a single FITS file. We do however require that
the event and GTI extension reside in the same FITS file. This satisfies the
feature request #1598.

A second variant of a write() method has been added to GCTAEventList that allows
specifying the events and Good Time Intervals FITS extension names. The standard
write() method will call this new write() method using the events extension name
extracted from the file name and the GTI extension name set by the m_gti_extname
member. The GCTAObservation::write() method was also extended and now has two
optional arguments that allow specifying the events and Good Time Interval FITS
extension names. These are simply forwared to the new GCTAEventList::write().
The GCTAObservation::save() method has now a special logic that decodes any
optionally specified extension in the format [EVENTS;GTI] into an events and a
Good Time Intervals extension name. These changes satisfy the feature request
#1598.


21. COMPTEL interface
---------------------
None
