.. _1.6:

GammaLib 1.6 release
====================

Overview
--------

GammaLib 1.6 is a major release that adds significant functionality.

In particular, this release provides:

* Various computational speed ups
* Handling of observation-specific energy thresholds and extended models in
  CTA On/Off analyses
* Support for Python pickeling


Bug fixes
---------

* [`2708 <https://cta-redmine.irap.omp.eu/issues/2708>`_] -
  Fix precision issue with ``GCTABackground3D`` Monte-Carlo simulations
* [`2706 <https://cta-redmine.irap.omp.eu/issues/2706>`_] -
  Integrate energy dispersion linearly instead of logarithmically
* [`2683 <https://cta-redmine.irap.omp.eu/issues/2683>`_] -
  Correct handling of stacked On/Off observations without background IRF.
  Fix bug that potentially wrote the wrong exposure time in a PHA file.
* [`2678 <https://cta-redmine.irap.omp.eu/issues/2678>`_] -
  Fix OpenMP bug in ``GObservations::likelihood::eval``
* [`2674 <https://cta-redmine.irap.omp.eu/issues/2674>`_] -
  Remove setting of effective area energy boundaries from ``LO_THRES`` and
  ``HI_THRES`` keywords
  Correctly compute maximum energy in ``GCTAAeff2D`` class
* [`2654 <https://cta-redmine.irap.omp.eu/issues/2654>`_] -
  Apply CTA 2D energy dispersion kludge only to CTA data
* [`2495 <https://cta-redmine.irap.omp.eu/issues/2495>`_] -
  Fix handling of q-mode parameters
* [`2420 <https://cta-redmine.irap.omp.eu/issues/2420>`_] -
  Keep existing library path in installation script on Mac OS X
* [`2312 <https://cta-redmine.irap.omp.eu/issues/2312>`_] -
  Compute likelihood values also if there are no model parameters
* [`2054 <https://cta-redmine.irap.omp.eu/issues/2054>`_] -
  Preserve GTIs when copying ``GCTAEventList`` and ``GCTAEventCube`` objects.
  Use MJD reference of first observation for exposure cube building in
  ``GCTACubeExposure``.


Improvements
------------

* Add support for Fermi/LAT P8V3 response functions
* [`2733 <https://cta-redmine.irap.omp.eu/issues/2733>`_] -
  Add ``GPythonOptimizerFunction`` class
* [`2721 <https://cta-redmine.irap.omp.eu/issues/2721>`_] -
  Revise ``GCTAEdispCube::operator()`` interface and disable stacked response
  cutting in true energy
* [`2715 <https://cta-redmine.irap.omp.eu/issues/2715>`_] -
  Add generic CTA response cache
* [`2710 <https://cta-redmine.irap.omp.eu/issues/2710>`_] -
  ``GCTAOnOffObservation`` now supports any kind of background model
* [`2704 <https://cta-redmine.irap.omp.eu/issues/2704>`_] -
  ``GCTAEdisp`` returns now energy dispersion values per MeV.
  The ``GCTAEdisp`` interface was revised.
* [`2694 <https://cta-redmine.irap.omp.eu/issues/2694>`_] -
  Protect ``GCTAInstDir`` from access to invalid information
* [`2677 <https://cta-redmine.irap.omp.eu/issues/2677>`_] -
  Define ``GCTACubeBackground`` for energy boundaries instead of nodes
* [`2670 <https://cta-redmine.irap.omp.eu/issues/2670>`_] -
  Support ``ENERG`` column name for CTA energy dispersion FITS file
* [`2660 <https://cta-redmine.irap.omp.eu/issues/2660>`_] -
  Make IRF interface compatible with H.E.S.S. format
* [`2659 <https://cta-redmine.irap.omp.eu/issues/2659>`_] -
  Add ``use_irf_bkg`` argument to ``GCTAOnOffObservation`` constructor
* [`2657 <https://cta-redmine.irap.omp.eu/issues/2657>`_] -
  Support effective area with theta cut in ``GCTAOnOffObservation``
* Add ``gammalib::replace_segment()`` function
* [`2541 <https://cta-redmine.irap.omp.eu/issues/2541>`_] -
  Add ``ARC`` WCS projection
* Add ``GLog::buffer()`` method
* Renamed ``GPhoton::mcid()`` to ``GPhoton::mc_id()``
* [`2513 <https://cta-redmine.irap.omp.eu/issues/2513>`_] -
  Support application specific system parameter files
* Add methods and operators to handle additional columns in ``GPha``
* Made ``GApplicationPar::query()`` method public
* [`2466 <https://cta-redmine.irap.omp.eu/issues/2466>`_] -
  Speed up computation of diffuse map models for CTA
* [`2463 <https://cta-redmine.irap.omp.eu/issues/2463>`_] -
  Enhance ``GModelSpatialRadialProfileGauss`` class
* [`2458 <https://cta-redmine.irap.omp.eu/issues/2458>`_] -
  Increase integration precision for CTA diffuse model response
* [`2429 <https://cta-redmine.irap.omp.eu/issues/2429>`_] -
  Handle observation-specific energy thresholds in CTA On/Off analysis
* [`2422 <https://cta-redmine.irap.omp.eu/issues/2422>`_] -
  Add ``GCTAEdisp::prob_erecobin()`` method
* [`2422 <https://cta-redmine.irap.omp.eu/issues/2422>`_] -
  Add ``gammalib::gauss_integral()`` function
* [`2404 <https://cta-redmine.irap.omp.eu/issues/2404>`_] -
  Make ``GPha``, ``GArf`` and ``GRmf`` output files XSPEC compliant.
  Add methods to store file attributes in ``GPha``
* [`2343 <https://cta-redmine.irap.omp.eu/issues/2343>`_] -
  CTA 3D background model now supports ``BKG`` column names
* [`2339 <https://cta-redmine.irap.omp.eu/issues/2339>`_] -
  Ignore non-manadory columns in ``GCTABackground3D::read()`` method and
  add ``GFitsTable::remove()`` methods
* [`2309 <https://cta-redmine.irap.omp.eu/issues/2309>`_] -
  Add ``GSkyDir::cos_dist()`` method
* [`2308 <https://cta-redmine.irap.omp.eu/issues/2308>`_] -
  Add ``GCTABackground::rate_ebin()`` method and ``gammalib::atan2()`` and
  ``gammalib::plaw_integral()`` functions
* [`2292 <https://cta-redmine.irap.omp.eu/issues/2292>`_] -
  Handle extended models in CTA On/Off analysis


New features
------------

* [`2694 <https://cta-redmine.irap.omp.eu/issues/2694>`_] -
  Implement general CTA background model
* [`2454 <https://cta-redmine.irap.omp.eu/issues/2454>`_] -
  Add ``GModelSpectralExponential`` class
* Add ``GCTAModelRadialAcceptance`` model component setter methods
* [`1938 <https://cta-redmine.irap.omp.eu/issues/1938>`_] -
  Support pickeling of GammaLib classes in Python


Clean up
--------

* [`2758 <https://cta-redmine.irap.omp.eu/issues/2758>`_] -
  CTA background rates are now per ontime
* [`2716 <https://cta-redmine.irap.omp.eu/issues/2716>`_] -
  Rename ``GCTAResponseIrf::lo_save_thres()`` and
  ``GCTAResponseIrf::hi_save_thres()`` to ``GCTAResponseIrf::lo_safe_thres()``
  and ``GCTAResponseIrf::hi_safe_thres()``
* [`2515 <https://cta-redmine.irap.omp.eu/issues/2515>`_] -
  Remove ``at()`` methods from Python interface
